import numpy as np
import tensorflow as tf
from tensorflow.keras import layers, models

# Example: random data (replace with credit card dataset)
X = np.random.rand(1000, 20)

# Autoencoder model
input_dim = X.shape[1]
encoding_dim = 10

input_layer = layers.Input(shape=(input_dim,))
encoded = layers.Dense(encoding_dim, activation="relu")(input_layer)
decoded = layers.Dense(input_dim, activation="sigmoid")(encoded)

autoencoder = models.Model(input_layer, decoded)
autoencoder.compile(optimizer="adam", loss="mse")

# Train autoencoder
autoencoder.fit(X, X, epochs=20, batch_size=32, shuffle=True)

# Reconstruction error
reconstructed = autoencoder.predict(X)
mse = np.mean(np.power(X - reconstructed, 2), axis=1)

# Mark outliers
threshold = np.percentile(mse, 95)
outliers = np.where(mse > threshold)[0]
print("Detected outliers:", outliers)
